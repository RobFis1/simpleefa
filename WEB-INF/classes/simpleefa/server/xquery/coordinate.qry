declare namespace functx = 'http://www.functx.com'; 
declare function functx:trim($arg as xs:string? ) as xs:string {
	fn:replace(fn:replace($arg,'(\\s|[ ]|[,.!:;]|[n][b][s][p][;])+$',''),'^(\\s|[ ]|[,.!:;]|[n][b][s][p][;])+','')
};
declare function functx:repeat-string($stringToRepeat as xs:string?,$count as xs:integer) as xs:string { 
	string-join((for $i in 1 to $count return $stringToRepeat),'')
};
declare function functx:pad-integer-to-length ($integerToPad as xs:anyAtomicType?,$length as xs:integer )  as xs:string {
	if ($length < string-length(string($integerToPad)))
	then error(xs:QName('functx:Integer_Longer_Than_Length'))
	else concat
		(functx:repeat-string(
			'0',$length - string-length(string($integerToPad))),
		string($integerToPad))
	} ;
declare function functx:time ($hour as xs:anyAtomicType,$minute as xs:anyAtomicType,$second as xs:anyAtomicType)  as xs:time {
 xs:time(
  concat(
    functx:pad-integer-to-length(xs:integer($hour),2),':',
    functx:pad-integer-to-length(xs:integer($minute),2),':',
	 functx:pad-integer-to-length(xs:integer($second),2)))
} ;
declare variable $doc external;
declare variable $x_cor external;
declare variable $y_cor external;
for $req in $doc//itdCoordInfoRequest 
let $x := data($req/itdCoordInfo/coordInfoRequest/itdCoord/@x)
let $y := data($req/itdCoordInfo/coordInfoRequest/itdCoord/@y)
 return
 <nearby_stations> 
<for_input>
	<x>{$x}</x>
	<y>{$y}</y>
</for_input>
{
 
 for $loc in $req/itdCoordInfo/coordInfoItemList/coordInfoItem 
	let $id := data($loc/@id)
	let $x := number($loc/itdPathCoordinates/itdCoordinateBaseElemList/itdCoordinateBaseElem/x/child::text())
	let $y := number($loc/itdPathCoordinates/itdCoordinateBaseElemList/itdCoordinateBaseElem/y/child::text())
	let $stationname := data($loc/@name)
	let $locationname := data($loc/@locality)
	let $name := concat($locationname,', ',$stationname)
	return 
		<station id='{$id}'>
			{$name}
			<location_name>
				{$locationname}
			</location_name>
			<station_name>
				{$stationname}
			</station_name>
			<position x='{xs:decimal($x + $x_cor)}' y='{xs:decimal($y_cor - $y)}' />
		</station>
}
</nearby_stations>